{
  "openapi": "3.0.0",
  "info": {
    "title": "Abstraction Layer API",
    "version": "1.0.0"
  },
  "components": {},
  "tags": [
    {
      "name": "provider"
    },
    {
      "name": "token"
    },
    {
      "name": "registry"
    },
    {
      "name": "compliance"
    },
    {
      "name": "locks"
    },
    {
      "name": "roles"
    },
    {
      "name": "transaction"
    },
    {
      "name": "event"
    },
    {
      "name": "deploy"
    },
    {
      "name": "omnibus"
    }
  ],
  "servers": [
    {
      "url": "https://al.dev.securitize.io/"
    }
  ],
  "paths": {
    "/v1/deployments/{id}/token_details": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Token detail",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "decimals": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "standard",
                        "partitioned"
                      ]
                    },
                    "url": {
                      "type": "string"
                    },
                    "metadataHash": {
                      "type": "string"
                    },
                    "totalAssets": {
                      "type": "string"
                    },
                    "totalIssued": {
                      "type": "string"
                    },
                    "totalWallets": {
                      "type": "integer"
                    },
                    "isPaused": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Token detail"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getTokenDetails",
        "summary": "Get token details",
        "tags": [
          "token"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/tokens": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Total supply response",
                  "properties": {
                    "totalSupply": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Total supply response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getMintedTokens",
        "summary": "Get the total number of minted tokens in all wallets",
        "tags": [
          "token"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postTokens",
        "summary": "Create new tokens",
        "tags": [
          "token"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "to": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "value": {
                    "type": "string",
                    "pattern": "^[1-9]$|[1-9][0-9]+$"
                  },
                  "dryrun": {
                    "type": "boolean"
                  },
                  "force": {
                    "type": "boolean"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "issuanceTime": {
                    "type": "integer"
                  },
                  "lock": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "pattern": "^[1-9]$|[1-9][0-9]+$"
                      },
                      "releaseTime": {
                        "type": "integer"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "reasonCode": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "value"
                    ]
                  }
                },
                "required": [
                  "identity",
                  "to",
                  "value"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "deleteTokens",
        "summary": "Destroy tokens",
        "tags": [
          "token"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "to": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "value": {
                    "type": "string",
                    "pattern": "^[1-9]$|[1-9][0-9]+$"
                  },
                  "dryrun": {
                    "type": "boolean"
                  },
                  "force": {
                    "type": "boolean"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "identity",
                  "to",
                  "value"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/pause": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postPause",
        "summary": "Set whether the token is paused. A paused token disables all transfers",
        "tags": [
          "token"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "paused": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "identity",
                  "paused"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/tokens/transfer": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postTransferTokens",
        "summary": "Transfer tokens from holder to another address",
        "tags": [
          "token"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "to": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "value": {
                    "type": "string",
                    "pattern": "^[1-9]$|[1-9][0-9]+$"
                  },
                  "dryrun": {
                    "type": "boolean"
                  },
                  "force": {
                    "type": "boolean"
                  },
                  "from": {
                    "type": "string",
                    "pattern": ".+"
                  }
                },
                "required": [
                  "identity",
                  "from",
                  "to",
                  "value"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/wallets/{address}/balance": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Wallet token balance response",
                  "properties": {
                    "balance": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Wallet token balance response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getWalletBalance",
        "summary": "Get the balance of tokens at a particular wallet id",
        "tags": [
          "token"
        ],
        "parameters": [
          {
            "name": "transferable",
            "in": "query",
            "description": "Only show the amount of transferable tokens (default shows all tokens)",
            "schema": {
              "type": "boolean",
              "description": "Only show the amount of transferable tokens (default shows all tokens)"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/tokens/seize": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postSeize",
        "summary": "Forcefully Transfer tokens from holder to another address by the issuer",
        "tags": [
          "token"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "to": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "value": {
                    "type": "string",
                    "pattern": "^[1-9]$|[1-9][0-9]+$"
                  },
                  "dryrun": {
                    "type": "boolean"
                  },
                  "force": {
                    "type": "boolean"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "identity",
                  "to",
                  "value"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/tokens/allowance": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postAllowance",
        "summary": "Approve a third address to move tokens from the caller address",
        "tags": [
          "token"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "from": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "spender": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "value": {
                    "type": "string",
                    "pattern": "^[1-9]$|[1-9][0-9]+$"
                  }
                },
                "required": [
                  "identity",
                  "from",
                  "spender",
                  "value"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Check allowance response",
                  "properties": {
                    "allowance": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Check allowance response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getAllowance",
        "summary": "Check allowance of transfer by an owner to a spender, for the calling wallet",
        "tags": [
          "token"
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spender",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/holders/{holderId}/balance": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Holders balance response",
                  "properties": {
                    "balance": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Holders balance response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getHolderBalance",
        "summary": "Get the entire balance of tokens for an holder",
        "tags": [
          "token"
        ],
        "parameters": [
          {
            "name": "transferable",
            "in": "query",
            "description": "Only show the amount of transferable tokens (default shows all tokens)",
            "schema": {
              "type": "boolean",
              "description": "Only show the amount of transferable tokens (default shows all tokens)"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/account/{account}/enabled": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Account status response",
                  "properties": {
                    "isEnabled": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Account status response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getAccountEnabled",
        "summary": "Check if the account opted in to receive that asset",
        "tags": [
          "token"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/tokens/{tokenId}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Token details",
                  "properties": {
                    "tokenId": {
                      "type": "string"
                    },
                    "tokenAddress": {
                      "type": "string"
                    },
                    "deploymentId": {
                      "type": "string"
                    },
                    "network": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Token details"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getTokenDetails",
        "summary": "Gets token details by token Id",
        "tags": [
          "token"
        ],
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "description": "The token id",
            "schema": {
              "type": "string",
              "description": "The token id"
            }
          }
        ]
      }
    },
    "/v1/transactions/{id}": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Transaction execution result",
                  "properties": {
                    "transactionProviderId": {
                      "type": "string"
                    },
                    "signatureId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "unsigned",
                        "sent",
                        "error",
                        "success",
                        "failure",
                        "signed",
                        "canceled",
                        "speed-up"
                      ]
                    },
                    "transactionData": {
                      "type": "string",
                      "description": "The transactionData to sign final multisig transactions"
                    },
                    "additionalData": {
                      "type": "object",
                      "description": "The additionalData to sign final multisig transactions"
                    }
                  }
                }
              }
            },
            "description": "Transaction execution result"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Executes a signed transaction",
        "tags": [
          "transaction"
        ],
        "operationId": "executeTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "transactionData": "0x7f7465737432000000000000000000000000000000000000000000000000000000600057",
                "additionalData": {
                  "identity": "0xC17a59228C04D1eeAB92b9E45A7175b361c1e958",
                  "multiSigTransactionExecution": true,
                  "multiSigWalletId": "5ec2e141-22fb-491c-b45d-19450ee54b86",
                  "multiSigWalletNonce": "15",
                  "clientTransactionId": "1515",
                  "signature": {
                    "s": "0x12c4c303c735e4d60bd74e093100c16f65ff602c91df2b8214fbdf636d6bfb11",
                    "r": "0x4bc984e5e17c69829cfc287e9fb1f91076f8f62e7593cc645a17dddb8d0b5ada",
                    "v": 27
                  }
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "transactionData": {
                    "type": "string",
                    "description": "Signed transaction data to execute"
                  },
                  "additionalData": {
                    "type": "object",
                    "description": "Additional data to execute transactions",
                    "properties": {
                      "identity": {
                        "type": "string",
                        "description": "The address of the user calls the transaction"
                      },
                      "multiSigTransactionExecution": {
                        "type": "boolean",
                        "description": "True to prepare multisigWallet.execute transaction. If true main-api must not SEND transaction"
                      },
                      "multiSigWalletId": {
                        "type": "string",
                        "description": "The id of the multisig wallet used to sign the transaction"
                      },
                      "multiSigWalletNonce": {
                        "type": "string",
                        "description": "The nonce of the multisig wallet"
                      },
                      "clientTransactionId": {
                        "type": "string",
                        "description": "Id of the transaction of the caller system"
                      },
                      "signature": {
                        "type": "object",
                        "description": "Signature in r,s,v format",
                        "properties": {
                          "s": {
                            "type": "string",
                            "pattern": "(0x)[0-9a-fA-F]+$",
                            "description": "s signature"
                          },
                          "r": {
                            "type": "string",
                            "pattern": "(0x)[0-9a-fA-F]+$",
                            "description": "r signature"
                          },
                          "v": {
                            "type": "integer",
                            "description": "v signature"
                          }
                        },
                        "required": [
                          "r",
                          "s",
                          "v"
                        ]
                      }
                    },
                    "required": [
                      "identity"
                    ]
                  }
                },
                "required": [
                  "transactionData"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The transaction id",
            "schema": {
              "type": "string",
              "description": "The transaction id"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Transaction info",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "transactionProviderId": {
                      "type": "string",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "unsigned",
                        "sent",
                        "error",
                        "success",
                        "failure",
                        "signed",
                        "canceled",
                        "speed-up"
                      ]
                    },
                    "finalized": {
                      "type": "boolean"
                    },
                    "blockNumber": {
                      "type": "integer",
                      "nullable": true
                    },
                    "timestamp": {
                      "type": "integer",
                      "nullable": true
                    },
                    "targetAddress": {
                      "type": "string"
                    },
                    "inputData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Transaction info"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets transaction information",
        "tags": [
          "transaction"
        ],
        "operationId": "getTransactionInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/transactions": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Transaction different statuses explanation :Unsigned - Transaction was created but not yet signed ,Sent - Transaction was executed pending results, Success - Transaction was executed with successfull results, Failure - Transaction was executed with running errors, Error - There was an error when trying to execute the transaction",
                  "items": {
                    "type": "object",
                    "description": "Transaction info",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "transactionProviderId": {
                        "type": "string",
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "unsigned",
                          "sent",
                          "error",
                          "success",
                          "failure",
                          "signed",
                          "canceled",
                          "speed-up"
                        ]
                      },
                      "finalized": {
                        "type": "boolean"
                      },
                      "blockNumber": {
                        "type": "integer",
                        "nullable": true
                      },
                      "timestamp": {
                        "type": "integer",
                        "nullable": true
                      },
                      "targetAddress": {
                        "type": "string"
                      },
                      "inputData": {
                        "type": "string"
                      },
                      "additionalData": {
                        "type": "string"
                      },
                      "externalId": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "Transaction different statuses explanation :Unsigned - Transaction was created but not yet signed ,Sent - Transaction was executed pending results, Success - Transaction was executed with successfull results, Failure - Transaction was executed with running errors, Error - There was an error when trying to execute the transaction"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets a list of transactions according to optional parameters",
        "tags": [
          "transaction"
        ],
        "operationId": "getTransactionsInformation",
        "parameters": [
          {
            "name": "statuses",
            "in": "query",
            "description": "An array of transaction statuses",
            "schema": {
              "description": "An array of transaction statuses",
              "items": {
                "type": "string",
                "enum": [
                  "unsigned",
                  "sent",
                  "error",
                  "success",
                  "failure",
                  "signed",
                  "canceled",
                  "speed-up"
                ]
              },
              "oneOf": [
                {
                  "type": "array"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "finalized",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "deploymentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transactionProviderId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/transactions/{id}/speedup": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Return a transaction to be signed with higher chances of being successful. If gasPrices is not specified, it will call gasStation with HIGHER priority.",
        "tags": [
          "transaction"
        ],
        "operationId": "speedupTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "identity": "0x311c06eba0514677601c712ca8ad1d87dc7e1dd1",
                "manualParams": {
                  "gasPrice": "1500000000000000"
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string"
                  },
                  "manualParams": {
                    "type": "object",
                    "properties": {
                      "gasPrice": {
                        "type": "string",
                        "description": "The new gasPrice to speedUp transaction",
                        "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                      }
                    },
                    "required": [
                      "gasPrice"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/transactions/{id}/cancel": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Returns a transaction to be signed which if succeeds will cancel non-mined transaction",
        "tags": [
          "transaction"
        ],
        "operationId": "cancelTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "identity": "0x311c06eba0514677601c712ca8ad1d87dc7e1dd1"
              },
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/transactions/{id}/decode": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "transaction",
                  "properties": {
                    "transactionProviderId": {
                      "type": "string"
                    },
                    "blockNumber": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "unsigned",
                        "sent",
                        "error",
                        "success",
                        "failure",
                        "signed",
                        "canceled",
                        "speed-up"
                      ]
                    },
                    "finalized": {
                      "type": "boolean"
                    },
                    "gasPrice": {
                      "type": "string"
                    },
                    "signerAddress": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "transaction"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Decodes a saved transaction directly from the provider",
        "tags": [
          "transaction"
        ],
        "operationId": "decodeTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/counters/reset": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "reset counters response",
                  "additionalProperties": false
                }
              }
            },
            "description": "reset counters response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Resets transactions counter by identity",
        "tags": [
          "transaction"
        ],
        "operationId": "resetCounter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string"
                  },
                  "identity": {
                    "type": "string"
                  }
                },
                "required": [
                  "provider",
                  "identity"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/transactions/{id}/status": {
      "put": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "update transaction response",
                  "additionalProperties": false
                }
              }
            },
            "description": "update transaction response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Updates a signed transaction status & hash",
        "tags": [
          "transaction"
        ],
        "operationId": "updateTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "transactionProviderId": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  }
                },
                "required": [
                  "transactionProviderId",
                  "externalId"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/multisig_wallets": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Multisig wallet",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "deploymentStatus": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "inProgress",
                        "success",
                        "failure"
                      ]
                    }
                  }
                }
              }
            },
            "description": "Multisig wallet"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Deploy a new multisig-wallet",
        "tags": [
          "multisig-wallet"
        ],
        "operationId": "deployMultisigWallet",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "walletName": "Example Wallet",
                "threshold": 2,
                "owners": [
                  "0xbC3B5f1caB9c780d524d685613ad8B6369d86E65",
                  "0x8c69A1287FeA4ed7A4Ef3c41D95582c03fA360FD",
                  "0xE55b2d3F39C1D561E1728dc1cF454e63F3732126"
                ]
              },
              "schema": {
                "type": "object",
                "properties": {
                  "walletName": {
                    "type": "string"
                  },
                  "threshold": {
                    "type": "number"
                  },
                  "owners": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "(0x)[0-9a-fA-F]+$"
                    }
                  }
                },
                "required": [
                  "walletName",
                  "owners",
                  "threshold"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment Id",
            "schema": {
              "description": "The deployment Id",
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of Multisig wallets",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "walletName": {
                        "type": "string"
                      },
                      "walletAddress": {
                        "type": "string"
                      },
                      "deploymentStatus": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "inProgress",
                          "success",
                          "failure"
                        ]
                      },
                      "threshold": {
                        "type": "integer"
                      },
                      "nonce": {
                        "type": "string",
                        "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                      },
                      "signingLock": {
                        "type": "boolean",
                        "default": false
                      }
                    },
                    "required": [
                      "address"
                    ]
                  }
                }
              }
            },
            "description": "List of Multisig wallets"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "List of multisig-wallet",
        "tags": [
          "multisig-wallet"
        ],
        "operationId": "getMultisigWallet",
        "parameters": [
          {
            "name": "includeNonce",
            "in": "query",
            "description": "True to return the nonce of the wallet if it is deployed",
            "schema": {
              "type": "boolean",
              "description": "True to return the nonce of the wallet if it is deployed"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment Id",
            "schema": {
              "description": "The deployment Id",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/multisig_wallets/{walletId}": {
      "get": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "MultiSig wallet",
                  "properties": {
                    "walletName": {
                      "type": "string"
                    },
                    "threshold": {
                      "type": "number"
                    },
                    "walletAddress": {
                      "type": "string",
                      "pattern": "(0x)[0-9a-fA-F]+$"
                    },
                    "deploymentStatus": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "inProgress",
                        "success",
                        "failure"
                      ]
                    },
                    "deploymentId": {
                      "type": "number"
                    },
                    "signingLock": {
                      "type": "boolean",
                      "default": false,
                      "description": "True if multi-sig wallet can not create new transactions because of pending transactions"
                    }
                  }
                }
              }
            },
            "description": "MultiSig wallet"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Retrieves specified wallet",
        "tags": [
          "multisig-wallet"
        ],
        "operationId": "getSingleMultiSigWallet",
        "parameters": [
          {
            "name": "includeNonce",
            "in": "query",
            "description": "True to return the nonce of the wallet if it is deployed",
            "schema": {
              "type": "boolean",
              "description": "True to return the nonce of the wallet if it is deployed"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment Id",
            "schema": {
              "description": "The deployment Id",
              "type": "string"
            }
          },
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The wallet Id",
            "schema": {
              "description": "The wallet Id",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/multisig_wallets/transactions/status": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The signatures of the off-chain transactions are saved until reaching the minimum amount required to execute it (threshold). This service returns the number of signatures so far",
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "The id of the transaction"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "unsigned",
                        "sent",
                        "error",
                        "success",
                        "failure",
                        "signed",
                        "canceled",
                        "speed-up"
                      ]
                    },
                    "signatures": {
                      "type": "number",
                      "description": "The number of off-chain saved signatures of the transaction"
                    },
                    "threshold": {
                      "type": "number",
                      "description": "The number of off-chain required signatures to sign the transaction"
                    },
                    "nonce": {
                      "type": "string",
                      "description": "The nonce of the multisig wallet when the transaction is created"
                    },
                    "multiSigWalletId": {
                      "type": "string",
                      "description": "The id of the multisig"
                    },
                    "transactionData": {
                      "type": "string",
                      "description": "The transactionData of the transaction"
                    },
                    "additionalData": {
                      "type": "object",
                      "properties": {
                        "networkId": {
                          "type": "integer"
                        },
                        "networkType": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": true
                    },
                    "signingLock": {
                      "type": "boolean",
                      "default": false,
                      "description": "True if multi-sig wallet can not create new transactions because of pending transactions"
                    }
                  }
                }
              }
            },
            "description": "The signatures of the off-chain transactions are saved until reaching the minimum amount required to execute it (threshold). This service returns the number of signatures so far"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Get current status of a multisig transaction",
        "tags": [
          "multisig-wallet"
        ],
        "operationId": "getMultiSigTransactionStatusSchema",
        "parameters": [
          {
            "name": "clientTransactionId",
            "in": "query",
            "description": "The transaction id of the client",
            "schema": {
              "type": "string",
              "description": "The transaction id of the client"
            }
          },
          {
            "name": "includeTransactionData",
            "in": "query",
            "description": "True to include transactionData, false otherwise",
            "schema": {
              "type": "boolean",
              "description": "True to include transactionData, false otherwise"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/multisig_wallets/transactions/{transactionId}/signatures": {
      "delete": {
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "The id of the transaction"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "unsigned",
                        "sent",
                        "error",
                        "success",
                        "failure",
                        "signed",
                        "canceled",
                        "speed-up"
                      ]
                    },
                    "multiSigWalletId": {
                      "type": "string",
                      "description": "The id of the multisig"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Delete all the signatures of a specific multi-sig transaction",
        "tags": [
          "multisig-wallet"
        ],
        "operationId": "deleteMultiSigTransactionSignatures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Deployment token id",
            "schema": {
              "type": "string",
              "description": "Deployment token id"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "description": "MultiSig transaction id",
            "schema": {
              "type": "string",
              "description": "MultiSig transaction id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route. Call POST /v1/access_key",
            "schema": {
              "description": "A token to access this route. Call POST /v1/access_key",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/multisig_wallets/{walletId}/locking/{lockType}": {
      "put": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "MultiSig wallet Lock",
                  "properties": {
                    "signingLock": {
                      "type": "boolean",
                      "default": false,
                      "description": "True if multi-sig wallet can not create new transactions because of pending transactions"
                    },
                    "deploymentId": {
                      "type": "string"
                    },
                    "deploymentStatus": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "inProgress",
                        "success",
                        "failure"
                      ]
                    }
                  }
                }
              }
            },
            "description": "MultiSig wallet Lock"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Lock/Unlock specified wallet",
        "tags": [
          "multisig-wallet"
        ],
        "operationId": "lockMultiSigWallet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment Id",
            "schema": {
              "description": "The deployment Id",
              "type": "string"
            }
          },
          {
            "name": "walletId",
            "in": "path",
            "required": true,
            "description": "The wallet Id",
            "schema": {
              "description": "The wallet Id",
              "type": "string"
            }
          },
          {
            "name": "lockType",
            "in": "path",
            "required": true,
            "description": "Lock Type",
            "schema": {
              "description": "Lock Type",
              "type": "string",
              "enum": [
                "lock",
                "unlock"
              ]
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route. Call POST /v1/access_key",
            "schema": {
              "description": "A token to access this route. Call POST /v1/access_key",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/holders/{holderId}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Holder",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "attribute",
                        "properties": {
                          "name": {
                            "type": "string",
                            "enum": [
                              "kyc",
                              "accredited",
                              "qualified",
                              "professional"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "approved",
                              "rejected"
                            ]
                          },
                          "expiry": {
                            "type": "integer"
                          },
                          "proofHash": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "status"
                        ]
                      }
                    },
                    "wallets": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            },
            "description": "Holder"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Get a token holder",
        "operationId": "getHolder",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "updateTokenHolder",
        "summary": "Update a token holder",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "holder": {
                    "type": "object",
                    "description": "Holder",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "attribute",
                          "properties": {
                            "name": {
                              "type": "string",
                              "enum": [
                                "kyc",
                                "accredited",
                                "qualified",
                                "professional"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "approved",
                                "rejected"
                              ]
                            },
                            "expiry": {
                              "type": "integer"
                            },
                            "proofHash": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "status"
                          ]
                        }
                      },
                      "wallets": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "required": [
                  "identity",
                  "holder"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "deleteTokenHolder",
        "summary": "Delete a token holder",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  }
                },
                "required": [
                  "identity"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/holders": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "holders list",
                  "items": {
                    "type": "object",
                    "description": "Holder",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "attribute",
                          "properties": {
                            "name": {
                              "type": "string",
                              "enum": [
                                "kyc",
                                "accredited",
                                "qualified",
                                "professional"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "approved",
                                "rejected"
                              ]
                            },
                            "expiry": {
                              "type": "integer"
                            },
                            "proofHash": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "status"
                          ]
                        }
                      },
                      "wallets": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                }
              }
            },
            "description": "holders list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Get a list of holders",
        "operationId": "getHolders",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Create a new token holder record",
        "operationId": "postHolderRecord",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "holder": {
                    "type": "object",
                    "description": "Holder",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "attribute",
                          "properties": {
                            "name": {
                              "type": "string",
                              "enum": [
                                "kyc",
                                "accredited",
                                "qualified",
                                "professional"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "approved",
                                "rejected"
                              ]
                            },
                            "expiry": {
                              "type": "integer"
                            },
                            "proofHash": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "status"
                          ]
                        }
                      },
                      "wallets": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "reason": {
                    "type": "string"
                  },
                  "issuanceTime": {
                    "type": "integer"
                  },
                  "value": {
                    "type": "string",
                    "pattern": "^[1-9]$|[1-9][0-9]+$"
                  },
                  "lock": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "pattern": "^[1-9]$|[1-9][0-9]+$"
                      },
                      "releaseTime": {
                        "type": "integer"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "reasonCode": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "value"
                    ]
                  },
                  "investorPays": {
                    "type": "boolean",
                    "description": "true to prepare an investor-pays transaction"
                  }
                },
                "required": [
                  "identity",
                  "holder"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/holders/{holderId}/attributes/{name}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "attribute",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "kyc",
                        "accredited",
                        "qualified",
                        "professional"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "approved",
                        "rejected"
                      ]
                    },
                    "expiry": {
                      "type": "integer"
                    },
                    "proofHash": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "status"
                  ]
                }
              }
            },
            "description": "attribute"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getHolderAttributeValue",
        "summary": "Get the value of a specific attribute of a holder",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "updateAttribute",
        "summary": "Add or update an attribute status",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "attribute": {
                    "type": "object",
                    "description": "attribute",
                    "properties": {
                      "name": {
                        "type": "string",
                        "enum": [
                          "kyc",
                          "accredited",
                          "qualified",
                          "professional"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "rejected"
                        ]
                      },
                      "expiry": {
                        "type": "integer"
                      },
                      "proofHash": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "status"
                    ]
                  }
                },
                "required": [
                  "identity",
                  "attribute"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "deleteHolderAttribute",
        "summary": "Delete an attribute from an holder",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  }
                },
                "required": [
                  "identity"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/wallets": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "wallets list",
                  "items": {
                    "type": "object",
                    "properties": {
                      "holderId": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string",
                        "pattern": ".+"
                      },
                      "balance": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "holderId",
                      "address",
                      "balance"
                    ]
                  }
                }
              }
            },
            "description": "wallets list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getWallets",
        "summary": "Get a list of wallets",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postWallet",
        "summary": "Create a wallet for a holder",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "holderId": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "investorPays": {
                    "type": "boolean",
                    "description": "true to prepare an investor-pays transaction"
                  }
                },
                "required": [
                  "identity",
                  "holderId",
                  "wallet"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/wallets/{address}/holder": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Holder",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "attribute",
                        "properties": {
                          "name": {
                            "type": "string",
                            "enum": [
                              "kyc",
                              "accredited",
                              "qualified",
                              "professional"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "approved",
                              "rejected"
                            ]
                          },
                          "expiry": {
                            "type": "integer"
                          },
                          "proofHash": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "status"
                        ]
                      }
                    },
                    "wallets": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            },
            "description": "Holder"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getHolderByWalletID",
        "summary": "Get a token holder by wallet id",
        "tags": [
          "registry"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/wallets/{address}": {
      "delete": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "deleteWallet",
        "summary": "Remove a wallet from registration",
        "tags": [
          "registry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  }
                },
                "required": [
                  "identity"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/deployments": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Deployment data",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "multiSigWalletId": {
                      "type": "string"
                    },
                    "started": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "inProgress",
                        "success",
                        "failure"
                      ]
                    },
                    "contractAddress": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "properties": {
                        "issuerId": {
                          "type": "string"
                        },
                        "lastMinedBlockNumber": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Deployment data"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postDeployment",
        "summary": "Deploy a token",
        "tags": [
          "deploy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tokenDescription": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "decimals": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "standard",
                          "partitioned"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "metadataHash": {
                        "type": "string"
                      },
                      "totalAssets": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "symbol",
                      "decimals",
                      "type"
                    ]
                  },
                  "provider": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "high",
                      "medium",
                      "low"
                    ]
                  },
                  "gasPrice": {
                    "type": "string",
                    "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                  },
                  "complianceType": {
                    "type": "string",
                    "enum": [
                      "regulated",
                      "notRegulated",
                      "whitelisted",
                      "partitioned"
                    ]
                  },
                  "lockManagerType": {
                    "type": "string",
                    "enum": [
                      "wallet",
                      "investor",
                      "partitioned"
                    ]
                  },
                  "owners": {
                    "type": "object",
                    "properties": {
                      "omnibusTBEAddress": {
                        "type": "string"
                      },
                      "tokenOwner": {
                        "type": "string"
                      },
                      "walletRegistrarOwner": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "tokenOwner",
                      "walletRegistrarOwner"
                    ]
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "none",
                            "master",
                            "issuer",
                            "exchange"
                          ]
                        }
                      },
                      "required": [
                        "address",
                        "role"
                      ]
                    },
                    "minItems": 1
                  },
                  "multisig": {
                    "type": "object",
                    "properties": {
                      "walletName": {
                        "type": "string",
                        "description": "The name of the multisig wallet"
                      },
                      "owners": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string"
                        },
                        "description": "The owners addresses of the multisig contract"
                      },
                      "requiredConfirmations": {
                        "type": "integer",
                        "minimum": 2,
                        "description": "The amount of signers that are required to execute a multisig contract transaction"
                      }
                    },
                    "required": [
                      "walletName",
                      "owners",
                      "requiredConfirmations"
                    ]
                  },
                  "complianceRules": {
                    "type": "object",
                    "description": "Compliance rules",
                    "properties": {
                      "totalInvestorsLimit": {
                        "type": "integer"
                      },
                      "minUSTokens": {
                        "type": "string",
                        "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                      },
                      "minEUTokens": {
                        "type": "string",
                        "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                      },
                      "usInvestorsLimit": {
                        "type": "integer"
                      },
                      "usAccreditedInvestorsLimit": {
                        "type": "integer"
                      },
                      "nonAccreditedInvestorsLimit": {
                        "type": "integer"
                      },
                      "euRetailInvestorsLimit": {
                        "type": "integer"
                      },
                      "jpInvestorsLimit": {
                        "type": "integer"
                      },
                      "maxUSInvestorsPercentage": {
                        "type": "integer"
                      },
                      "blockFlowbackEndTime": {
                        "type": "integer"
                      },
                      "nonUSLockPeriod": {
                        "type": "integer"
                      },
                      "minimumTotalInvestors": {
                        "type": "integer"
                      },
                      "minimumHoldingsPerInvestor": {
                        "type": "string",
                        "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                      },
                      "maximumHoldingsPerInvestor": {
                        "type": "string",
                        "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                      },
                      "usLockPeriod": {
                        "type": "integer"
                      },
                      "forceFullTransfer": {
                        "type": "boolean"
                      },
                      "forceAccredited": {
                        "type": "boolean"
                      },
                      "forceAccreditedUS": {
                        "type": "boolean"
                      },
                      "worldWideForceFullTransfer": {
                        "type": "boolean"
                      }
                    },
                    "minProperties": 1
                  },
                  "countriesComplianceStatuses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "countryName": {
                          "type": "string"
                        },
                        "complianceStatus": {
                          "type": "string",
                          "enum": [
                            "none",
                            "us",
                            "eu",
                            "jp",
                            "forbidden"
                          ]
                        }
                      },
                      "required": [
                        "countryName",
                        "complianceStatus"
                      ]
                    }
                  },
                  "additionalData": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "required": [
                  "tokenDescription",
                  "provider",
                  "complianceType",
                  "lockManagerType",
                  "owners",
                  "roles"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Deployments list",
                  "items": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string"
                      },
                      "deployments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Deployment data",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "multiSigWalletId": {
                              "type": "string"
                            },
                            "started": {
                              "type": "integer"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "inProgress",
                                "success",
                                "failure"
                              ]
                            },
                            "contractAddress": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "additionalData": {
                              "type": "object",
                              "properties": {
                                "issuerId": {
                                  "type": "string"
                                },
                                "lastMinedBlockNumber": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Deployments list"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getDeployments",
        "summary": "Get deployments list",
        "tags": [
          "deploy"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "inProgress",
                "success",
                "failure"
              ]
            }
          },
          {
            "name": "started",
            "in": "query",
            "description": "The unix time the deployment has started",
            "schema": {
              "type": "number",
              "description": "The unix time the deployment has started"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Deployment data",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "multiSigWalletId": {
                      "type": "string"
                    },
                    "started": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "inProgress",
                        "success",
                        "failure"
                      ]
                    },
                    "contractAddress": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "properties": {
                        "issuerId": {
                          "type": "string"
                        },
                        "lastMinedBlockNumber": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Deployment data"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "resumeDeployment",
        "summary": "Resume an existing deployment from the last successful migration step",
        "tags": [
          "deploy"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Deployment data",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "multiSigWalletId": {
                      "type": "string"
                    },
                    "started": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "inProgress",
                        "success",
                        "failure"
                      ]
                    },
                    "contractAddress": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "properties": {
                        "issuerId": {
                          "type": "string"
                        },
                        "lastMinedBlockNumber": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Deployment data"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getDeploymentInfo",
        "summary": "Get deployment information",
        "tags": [
          "deploy"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/access_tokens": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Token access",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "secretAccessToken": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Token access"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postAccessTokens",
        "summary": "Create access tokens for deploying tokens",
        "tags": [
          "deploy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/retry": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Retry deployment",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Retry deployment"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "retryDeployment",
        "summary": "Retry deployment",
        "tags": [
          "deploy"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/create-asset": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postAlgorandAsset",
        "summary": "Create a new asset for algorand",
        "tags": [
          "deploy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tokenDescription": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "decimals": {
                        "type": "number"
                      },
                      "assetUrl": {
                        "type": "string"
                      },
                      "assetMetadataHash": {
                        "type": "string"
                      },
                      "totalAssets": {
                        "type": "string"
                      },
                      "masterAccount": {
                        "type": "string"
                      },
                      "freezeAccount": {
                        "type": "string"
                      },
                      "clawbackAccount": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "symbol",
                      "decimals",
                      "totalAssets",
                      "masterAccount"
                    ]
                  },
                  "provider": {
                    "type": "string"
                  }
                },
                "required": [
                  "tokenDescription",
                  "provider"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/asset": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deploymentId": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postAlgorandAsset",
        "summary": "Create deployment for algorand asset",
        "tags": [
          "deploy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tokenDescription": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "decimals": {
                        "type": "number"
                      },
                      "assetUrl": {
                        "type": "string"
                      },
                      "assetMetadataHash": {
                        "type": "string"
                      },
                      "totalAssets": {
                        "type": "string"
                      },
                      "masterAccount": {
                        "type": "string"
                      },
                      "freezeAccount": {
                        "type": "string"
                      },
                      "clawbackAccount": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "symbol",
                      "decimals",
                      "totalAssets",
                      "masterAccount"
                    ]
                  },
                  "provider": {
                    "type": "string"
                  }
                },
                "required": [
                  "tokenDescription",
                  "provider"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/events": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of events",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "transactionId": {
                        "type": "string"
                      },
                      "blockNumber": {
                        "type": "integer"
                      },
                      "blockTime": {
                        "type": "integer"
                      },
                      "eventType": {
                        "type": "string"
                      },
                      "parameters": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            },
            "description": "List of events"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets a list of events according to optional parameters",
        "tags": [
          "event"
        ],
        "operationId": "getEvents",
        "parameters": [
          {
            "name": "fromBlock",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "toBlock",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/message_queues": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Created queue",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "synced": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Created queue"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Created queue",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "synced": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Created queue"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Create a message queue to publish events on. If the message queue already exists it will return it",
        "tags": [
          "event"
        ],
        "operationId": "createQueue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/deployments/{id}/locks/{holderId}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of value-locks associated with a holder",
                  "items": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "integer"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "reasonCode": {
                        "type": "integer",
                        "default": 0
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "description": "List of value-locks associated with a holder"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets a list of value-locks associated with a holder",
        "description": "Gets a list of value-locks associated with a holder. Value locks disallow the transfer of some or all of a holder's wallet. they may have an auto-release time.",
        "tags": [
          "locks"
        ],
        "operationId": "getLocks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Creates a value-lock for a holder",
        "tags": [
          "locks"
        ],
        "operationId": "addLock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "lock": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "integer"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "reasonCode": {
                        "type": "integer",
                        "default": 0
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "identity",
                  "lock"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/locks/{holderId}/investor_lock": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Checks if an investor is locked",
                  "properties": {
                    "locked": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Checks if an investor is locked"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Checks if an investor is locked",
        "description": "Checks if an investor is locked. If it is, then the investor can no transfer/transferTo tokens",
        "tags": [
          "locks"
        ],
        "operationId": "getInvestorLock",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Create an investor lock for a holder",
        "tags": [
          "locks"
        ],
        "operationId": "addInvestorLock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "locked": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "identity",
                  "locked"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/locks/{holderId}/{lockIndex}": {
      "delete": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Removes a value-lock for a holder",
        "tags": [
          "locks"
        ],
        "operationId": "removeLock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  }
                },
                "required": [
                  "identity"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "holderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lockIndex",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/addresses/{address}/check": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "is address",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "is address"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "checks if the given address is a valid address",
        "tags": [
          "provider"
        ],
        "operationId": "isAddressDeploymentsByDeploymentId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/explorer/{address}/link": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Link",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Link"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets the address link for the corresponding network in relevant blockchain explorer",
        "tags": [
          "provider"
        ],
        "operationId": "getAddressLinkByDeploymentId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/addresses/{address}/balance": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "balance",
                  "properties": {
                    "balance": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "balance"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets the balance of a specific address",
        "tags": [
          "provider"
        ],
        "operationId": "getAddressBalanceByDeploymentId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/transactions/{txId}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "transaction",
                  "properties": {
                    "transactionProviderId": {
                      "type": "string"
                    },
                    "blockNumber": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "unsigned",
                        "sent",
                        "error",
                        "success",
                        "failure",
                        "signed",
                        "canceled",
                        "speed-up"
                      ]
                    },
                    "finalized": {
                      "type": "boolean"
                    },
                    "gasPrice": {
                      "type": "string"
                    },
                    "signerAddress": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "transaction"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Get transaction information directly from provider",
        "tags": [
          "provider"
        ],
        "operationId": "getProviderTransactionByDeploymentId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "txId",
            "in": "path",
            "required": true,
            "description": "The transaction id",
            "schema": {
              "type": "string",
              "description": "The transaction id",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/gas-price": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gasPrice": {
                      "type": "string"
                    },
                    "gasPriceUnit": {
                      "type": "string"
                    },
                    "cryptoCurrencySymbol": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Return the gas price - in wei",
        "tags": [
          "provider"
        ],
        "operationId": "getDeploymentGasPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/providers/{provider}/addresses/{address}/check": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "is address",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "is address"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "checks if the given address is a valid address",
        "tags": [
          "provider"
        ],
        "operationId": "isAddress",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/providers/{provider}/explorer/{address}/link": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Link",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Link"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets the address link for the corresponding network in relevant blockchain explorer",
        "tags": [
          "provider"
        ],
        "operationId": "getAddressLink",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/providers/{provider}/addresses/{address}/balance": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "balance",
                  "properties": {
                    "balance": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "balance"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets the balance of a specific address",
        "tags": [
          "provider"
        ],
        "operationId": "getAddressBalance",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/providers/{provider}/transactions/{id}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "transaction",
                  "properties": {
                    "transactionProviderId": {
                      "type": "string"
                    },
                    "blockNumber": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "unsigned",
                        "sent",
                        "error",
                        "success",
                        "failure",
                        "signed",
                        "canceled",
                        "speed-up"
                      ]
                    },
                    "finalized": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "transaction"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Get transaction information directly from provider",
        "tags": [
          "provider"
        ],
        "operationId": "getProviderTransaction",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The transaction id",
            "schema": {
              "type": "string",
              "description": "The transaction id",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/providers/{provider}/transactions/gas_price": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gasPrice": {
                      "type": "string"
                    },
                    "gasPriceUnit": {
                      "type": "string"
                    },
                    "cryptoCurrencySymbol": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Return the gas price - in wei - according to priority.",
        "tags": [
          "provider"
        ],
        "operationId": "getGasPrice",
        "parameters": [
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "high",
                "medium",
                "low"
              ]
            }
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/providers/{provider}/info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "rpc": {
                      "type": "string"
                    },
                    "chainId": {
                      "type": "number"
                    },
                    "networkId": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Return provider information.",
        "tags": [
          "provider"
        ],
        "operationId": "getProviderInfo",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/health-check": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "health check",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "OK",
                        "ALARM"
                      ]
                    },
                    "error": {
                      "type": "string"
                    },
                    "service": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "health check"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Checks provider service health",
        "tags": [
          "provider"
        ],
        "operationId": "getHealthCheck"
      }
    },
    "/v1/deployments/{id}/compliance_counters": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Compliance counters",
                  "properties": {
                    "euRetailInvestorsCounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "countryCode": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "usInvestorsCount": {
                      "type": "integer"
                    },
                    "totalInvestorsCount": {
                      "type": "integer"
                    },
                    "accreditedInvestorsCount": {
                      "type": "integer"
                    },
                    "usAccreditedInvestorsCount": {
                      "type": "integer"
                    },
                    "jpInvestorsCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Compliance counters"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets the current compliance holders counters",
        "tags": [
          "compliance"
        ],
        "operationId": "getComplianceCounters",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/compliance_rules": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Compliance rules",
                  "properties": {
                    "totalInvestorsLimit": {
                      "type": "integer"
                    },
                    "minUSTokens": {
                      "type": "string",
                      "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                    },
                    "minEUTokens": {
                      "type": "string",
                      "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                    },
                    "usInvestorsLimit": {
                      "type": "integer"
                    },
                    "usAccreditedInvestorsLimit": {
                      "type": "integer"
                    },
                    "nonAccreditedInvestorsLimit": {
                      "type": "integer"
                    },
                    "euRetailInvestorsLimit": {
                      "type": "integer"
                    },
                    "jpInvestorsLimit": {
                      "type": "integer"
                    },
                    "maxUSInvestorsPercentage": {
                      "type": "integer"
                    },
                    "blockFlowbackEndTime": {
                      "type": "integer"
                    },
                    "nonUSLockPeriod": {
                      "type": "integer"
                    },
                    "minimumTotalInvestors": {
                      "type": "integer"
                    },
                    "minimumHoldingsPerInvestor": {
                      "type": "string",
                      "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                    },
                    "maximumHoldingsPerInvestor": {
                      "type": "string",
                      "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                    },
                    "usLockPeriod": {
                      "type": "integer"
                    },
                    "forceFullTransfer": {
                      "type": "boolean"
                    },
                    "forceAccredited": {
                      "type": "boolean"
                    },
                    "forceAccreditedUS": {
                      "type": "boolean"
                    },
                    "worldWideForceFullTransfer": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Compliance rules"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets the current compliance rules",
        "tags": [
          "compliance"
        ],
        "operationId": "getComplianceRules",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Sets (updates) the current compliance rules",
        "tags": [
          "compliance"
        ],
        "operationId": "setComplianceRules",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "complianceRules": {
                    "type": "object",
                    "description": "Compliance rules",
                    "properties": {
                      "totalInvestorsLimit": {
                        "type": "integer"
                      },
                      "minUSTokens": {
                        "type": "string",
                        "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                      },
                      "minEUTokens": {
                        "type": "string",
                        "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                      },
                      "usInvestorsLimit": {
                        "type": "integer"
                      },
                      "usAccreditedInvestorsLimit": {
                        "type": "integer"
                      },
                      "nonAccreditedInvestorsLimit": {
                        "type": "integer"
                      },
                      "euRetailInvestorsLimit": {
                        "type": "integer"
                      },
                      "jpInvestorsLimit": {
                        "type": "integer"
                      },
                      "maxUSInvestorsPercentage": {
                        "type": "integer"
                      },
                      "blockFlowbackEndTime": {
                        "type": "integer"
                      },
                      "nonUSLockPeriod": {
                        "type": "integer"
                      },
                      "minimumTotalInvestors": {
                        "type": "integer"
                      },
                      "minimumHoldingsPerInvestor": {
                        "type": "string",
                        "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                      },
                      "maximumHoldingsPerInvestor": {
                        "type": "string",
                        "pattern": "^0$|[1-9]$|[1-9][0-9]+$"
                      },
                      "usLockPeriod": {
                        "type": "integer"
                      },
                      "forceFullTransfer": {
                        "type": "boolean"
                      },
                      "forceAccredited": {
                        "type": "boolean"
                      },
                      "forceAccreditedUS": {
                        "type": "boolean"
                      },
                      "worldWideForceFullTransfer": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "required": [
                  "identity",
                  "complianceRules"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/countries/{isocode}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Country Status",
                  "properties": {
                    "complianceStatus": {
                      "type": "string",
                      "enum": [
                        "none",
                        "us",
                        "eu",
                        "jp",
                        "forbidden"
                      ]
                    }
                  }
                }
              }
            },
            "description": "Country Status"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets the compliance status of a specific country code",
        "tags": [
          "compliance"
        ],
        "operationId": "getCountryStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isocode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Sets the compliance status of a specific country code",
        "tags": [
          "compliance"
        ],
        "operationId": "setCountryStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "complianceStatus": {
                    "type": "string",
                    "enum": [
                      "none",
                      "us",
                      "eu",
                      "jp",
                      "forbidden"
                    ]
                  }
                },
                "required": [
                  "identity",
                  "complianceStatus"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isocode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/countries": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Compliance statuses of all countries",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "deploymentId": {
                        "type": "string"
                      },
                      "countryName": {
                        "type": "string"
                      },
                      "complianceStatus": {
                        "type": "string",
                        "enum": [
                          "none",
                          "us",
                          "eu",
                          "jp",
                          "forbidden"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": "Compliance statuses of all countries"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets the compliance statuses of all countries",
        "tags": [
          "compliance"
        ],
        "operationId": "getCountriesStatuses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/role/{address}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "roles",
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "none",
                        "master",
                        "issuer",
                        "exchange"
                      ]
                    }
                  }
                }
              }
            },
            "description": "roles"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Gets the role for a wallet",
        "tags": [
          "roles"
        ],
        "operationId": "getRoleForWallet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      },
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "summary": "Sets the role for a wallet",
        "tags": [
          "roles"
        ],
        "operationId": "setRoleForWallet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "none",
                      "master",
                      "issuer",
                      "exchange"
                    ]
                  }
                },
                "required": [
                  "identity",
                  "role"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ".+"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/omnibus/tokens": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postBulkIssuanceTBE",
        "summary": "Bulk issuance to TBE Omnibus",
        "tags": [
          "omnibus"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "totalAmount": "156786",
                "issuanceTime": 1604535187,
                "identity": "0xBF0673B19088493d4dA310F13cb80C2293Cf5984",
                "dryrun": false,
                "force": false,
                "holders": [
                  {
                    "countryCode": "US",
                    "kyc": "approved",
                    "accredited": "approved",
                    "qualified": "approved",
                    "createInvestor": true
                  },
                  {
                    "countryCode": "ES",
                    "kyc": "approved",
                    "accredited": "approved",
                    "qualified": "rejected",
                    "createInvestor": true
                  }
                ]
              },
              "schema": {
                "type": "object",
                "properties": {
                  "totalAmount": {
                    "type": "string",
                    "pattern": "^[1-9]$|[1-9][0-9]+$"
                  },
                  "issuanceTime": {
                    "type": "integer"
                  },
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "dryrun": {
                    "type": "boolean"
                  },
                  "force": {
                    "type": "boolean"
                  },
                  "holders": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "countryCode": {
                          "type": "string"
                        },
                        "kyc": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "approved",
                            "rejected"
                          ]
                        },
                        "accredited": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "approved",
                            "rejected"
                          ]
                        },
                        "qualified": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "approved",
                            "rejected"
                          ]
                        },
                        "createInvestor": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "countryCode"
                      ]
                    }
                  }
                },
                "required": [
                  "identity",
                  "totalAmount",
                  "holders"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      },
      "delete": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "deleteTokensTBE",
        "summary": "Bulk token burn to TBE Omnibus",
        "tags": [
          "omnibus"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "totalAmount": "156786",
                "issuanceTime": 1604535187,
                "identity": "0xBF0673B19088493d4dA310F13cb80C2293Cf5984",
                "dryrun": false,
                "force": false,
                "holders": [
                  {
                    "countryCode": "US",
                    "kyc": "approved",
                    "accredited": "approved",
                    "qualified": "approved",
                    "removeInvestor": true
                  },
                  {
                    "countryCode": "ES",
                    "kyc": "approved",
                    "accredited": "approved",
                    "qualified": "rejected",
                    "removeInvestor": true
                  }
                ]
              },
              "schema": {
                "type": "object",
                "properties": {
                  "totalAmount": {
                    "type": "string",
                    "pattern": "^[1-9]$|[1-9][0-9]+$"
                  },
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "dryrun": {
                    "type": "boolean"
                  },
                  "force": {
                    "type": "boolean"
                  },
                  "holders": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "countryCode": {
                          "type": "string"
                        },
                        "kyc": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "approved",
                            "rejected"
                          ]
                        },
                        "accredited": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "approved",
                            "rejected"
                          ]
                        },
                        "qualified": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "approved",
                            "rejected"
                          ]
                        },
                        "removeInvestor": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "countryCode"
                      ]
                    }
                  }
                },
                "required": [
                  "identity",
                  "totalAmount",
                  "holders"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/omnibus/tokens/transfer": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postWithdrawal",
        "summary": "Bulk transfer from TBE to personal wallets (Withdrawal)",
        "tags": [
          "omnibus"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "identity": "string",
                "dryrun": false,
                "force": false,
                "transferList": [
                  {
                    "value": "100",
                    "toWallet": "0xfd237ea2164401bD2602258e89C62dF284fB0903"
                  },
                  {
                    "value": "200",
                    "toWallet": "0x46A35BF2947296bce4DC9d6aEB4229F5C79438c6"
                  }
                ]
              },
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "dryrun": {
                    "type": "boolean"
                  },
                  "force": {
                    "type": "boolean"
                  },
                  "investorPays": {
                    "type": "boolean",
                    "description": "If true it prepares an investor pays transaction data"
                  },
                  "transferList": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "pattern": "^[1-9]$|[1-9][0-9]+$"
                        },
                        "toWallet": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "value",
                      "toWallet"
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/omnibus/tokens/internal_transfer": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Prepared transaction to sign",
                  "properties": {
                    "transactionId": {
                      "type": "string"
                    },
                    "transactionData": {
                      "type": "string"
                    },
                    "additionalData": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            },
            "description": "Prepared transaction to sign"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "updateCountersInternalTransfer",
        "summary": "Adjusts blockchain counters according to the internal TBE transfer being reported",
        "tags": [
          "omnibus"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "identity": "0xda6739366a4139EeB3D1dAF5a98dFC38885646F6",
                "dryrun": false,
                "force": false,
                "externalId": "2719e23814e244ea80d1246edd4c2c9c",
                "fromHolder": {
                  "countryCode": "US",
                  "kyc": "approved",
                  "accredited": "approved",
                  "qualified": "pending",
                  "removeInvestor": true
                },
                "toHolder": {
                  "countryCode": "AR",
                  "kyc": "approved",
                  "accredited": "approved",
                  "qualified": "pending",
                  "createInvestor": true
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "identity": {
                    "type": "string",
                    "pattern": ".+"
                  },
                  "dryrun": {
                    "type": "boolean"
                  },
                  "force": {
                    "type": "boolean"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "fromHolder": {
                    "type": "object",
                    "properties": {
                      "countryCode": {
                        "type": "string"
                      },
                      "kyc": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "rejected"
                        ]
                      },
                      "accredited": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "rejected"
                        ]
                      },
                      "qualified": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "rejected"
                        ]
                      },
                      "removeInvestor": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "countryCode"
                    ]
                  },
                  "toHolder": {
                    "type": "object",
                    "properties": {
                      "countryCode": {
                        "type": "string"
                      },
                      "kyc": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "rejected"
                        ]
                      },
                      "accredited": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "rejected"
                        ]
                      },
                      "qualified": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "approved",
                          "rejected"
                        ]
                      },
                      "createInvestor": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "countryCode"
                    ]
                  }
                },
                "required": [
                  "identity"
                ]
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/omnibus/tokens/tbe-address": {
      "get": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Return Omnibus TBE Wallet Address",
                  "properties": {
                    "OmnibusWalletAddress": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Return Omnibus TBE Wallet Address"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "getAlgorandTBEAddress",
        "summary": "Get Algorand omnibus tbe wallet address",
        "tags": [
          "omnibus"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          }
        ]
      }
    },
    "/v1/access_tokens": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "'accessToken': identifies the user 'secretAccessToken': proves the identity of the user",
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "secretAccessToken": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "'accessToken': identifies the user 'secretAccessToken': proves the identity of the user"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postAccessTokenPair",
        "description": "Create an access token pair",
        "tags": [
          "Security"
        ],
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/providers/{providerId}/key-pair": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "HSM KeyPair",
                  "properties": {
                    "pkLabel": {
                      "type": "string"
                    },
                    "Address": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "HSM KeyPair"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "createHSMKeyPairProvider",
        "summary": "Create hsm keypair set for sign token transactions",
        "tags": [
          "deploy"
        ],
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "description": "The provider id",
            "schema": {
              "type": "string",
              "description": "The provider id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/key-pair": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "HSM KeyPair",
                  "properties": {
                    "pkLabel": {
                      "type": "string"
                    },
                    "Address": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "HSM KeyPair"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "postHSMKeyPair",
        "summary": "Create hsm keypair set for sign token transactions",
        "tags": [
          "deploy"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      }
    },
    "/v1/deployments/{id}/hsm": {
      "put": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "HSM Deployment and AbstractionLayer Deployment Ids",
                  "properties": {
                    "deploymentId": {
                      "type": "string"
                    },
                    "abstractionLayerDeploymentId": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "HSM Deployment and AbstractionLayer Deployment Ids"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Error method",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "extraData": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Error method"
          }
        },
        "operationId": "updateHSM",
        "summary": "Updates deployment id for specified HSM Signer",
        "tags": [
          "deploy"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "abstractionLayerDeploymentId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The deployment id",
            "schema": {
              "type": "string",
              "description": "The deployment id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "description": "A token to access this route",
            "schema": {
              "description": "A token to access this route",
              "type": "string"
            }
          }
        ]
      }
    }
  }
}