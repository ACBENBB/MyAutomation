<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="30238" started-at="2021-06-24T15:47:27 IDT" finished-at="2021-06-24T15:47:57 IDT">
    <groups>
    </groups>
    <test name="Test" duration-ms="30238" started-at="2021-06-24T15:47:27 IDT" finished-at="2021-06-24T15:47:57 IDT">
      <class name="Tests.ShowAllFormsTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Tests.ShowAllFormsTest@369f73a2]" name="setup" is-config="true" duration-ms="2723" started-at="2021-06-24T15:47:40 IDT" finished-at="2021-06-24T15:47:42 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="searchAllForms()[pri:0, instance:Tests.ShowAllFormsTest@369f73a2]" name="searchAllForms" duration-ms="8913" started-at="2021-06-24T15:47:42 IDT" description="Search all forms" finished-at="2021-06-24T15:47:51 IDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at Tests.ShowAllFormsTest.searchAllForms(ShowAllFormsTest.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAllForms -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:Tests.ShowAllFormsTest@369f73a2]" name="failedTest" is-config="true" duration-ms="172" started-at="2021-06-24T15:47:51 IDT" finished-at="2021-06-24T15:47:52 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchAllForms status=FAILURE method=ShowAllFormsTest.searchAllForms()[pri:0, instance:Tests.ShowAllFormsTest@369f73a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Tests.ShowAllFormsTest@369f73a2]" name="tearDown" is-config="true" duration-ms="657" started-at="2021-06-24T15:47:52 IDT" finished-at="2021-06-24T15:47:52 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.ShowAllFormsTest -->
      <class name="Tests.ForgotPasswordTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Tests.ForgotPasswordTest@1f28c152]" name="setup" is-config="true" duration-ms="2289" started-at="2021-06-24T15:47:52 IDT" finished-at="2021-06-24T15:47:54 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="forgotPasswordErrorMessage()[pri:0, instance:Tests.ForgotPasswordTest@1f28c152]" name="forgotPasswordErrorMessage" duration-ms="1444" started-at="2021-06-24T15:47:54 IDT" description="forgotPassword + wrong userName + test correct errorMessage" finished-at="2021-06-24T15:47:56 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordErrorMessage -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:Tests.ForgotPasswordTest@1f28c152]" name="failedTest" is-config="true" duration-ms="1" started-at="2021-06-24T15:47:56 IDT" finished-at="2021-06-24T15:47:56 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordErrorMessage status=SUCCESS method=ForgotPasswordTest.forgotPasswordErrorMessage()[pri:0, instance:Tests.ForgotPasswordTest@1f28c152] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Tests.ForgotPasswordTest@1f28c152]" name="tearDown" is-config="true" duration-ms="1448" started-at="2021-06-24T15:47:56 IDT" finished-at="2021-06-24T15:47:57 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.ForgotPasswordTest -->
      <class name="Tests.LoginTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Tests.LoginTest@731a74c]" name="setup" is-config="true" duration-ms="4333" started-at="2021-06-24T15:47:27 IDT" finished-at="2021-06-24T15:47:32 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="loginFailure()[pri:0, instance:Tests.LoginTest@731a74c]" name="loginFailure" duration-ms="3291" started-at="2021-06-24T15:47:32 IDT" description="test incorrect login info" finished-at="2021-06-24T15:47:35 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFailure -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@731a74c]" name="failedTest" is-config="true" duration-ms="2" started-at="2021-06-24T15:47:35 IDT" finished-at="2021-06-24T15:47:35 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginFailure status=SUCCESS method=LoginTest.loginFailure()[pri:0, instance:Tests.LoginTest@731a74c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method status="PASS" signature="loginSucces()[pri:0, instance:Tests.LoginTest@731a74c]" name="loginSucces" duration-ms="4251" started-at="2021-06-24T15:47:35 IDT" description="Test correct login info" finished-at="2021-06-24T15:47:39 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSucces -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:Tests.LoginTest@731a74c]" name="failedTest" is-config="true" duration-ms="1" started-at="2021-06-24T15:47:39 IDT" finished-at="2021-06-24T15:47:39 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginSucces status=SUCCESS method=LoginTest.loginSucces()[pri:0, instance:Tests.LoginTest@731a74c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Tests.LoginTest@731a74c]" name="tearDown" is-config="true" duration-ms="668" started-at="2021-06-24T15:47:39 IDT" finished-at="2021-06-24T15:47:40 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
